Description: >
  Jonathan Llovet / Udacity DevOps Engineer ND 2020 - Udagram Project
  Definition of network infrastructure

Parameters:
  Owner:
    Description: Email address of resource owner
    Type: String
    Default: jonathan.llovet@gmail.com
    # AllowedPattern: '/[^\s@]+@[^\s@]+\.[^\s@]+/'

  Environment:
    Description: Name of the environment - will be prefixed to resources
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - QA
      - Prod

  VpcCIDR:
    Description: CIDR Block for the VPC (e.g 10.0.0.0/16)
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PublicSubnet1CIDR:
    Description: CIDR block of public subnet in first availability zone
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PublicSubnet2CIDR:
    Description: CIDR block of public subnet in second availability zone
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet1CIDR:
    Description: CIDR block of private subnet in first availability zone
    Type: String
    Default: 10.0.2.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet2CIDR:
    Description: CIDR block of private subnet in second availability zone
    Type: String
    Default: 10.0.3.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

Resources:

############################################################
# Network Infrastructure
############################################################

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-VPC"
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-InternetGateway"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

############################################################
# Subnets
############################################################

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Public-Subnet-AZ1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Public-Subnet-AZ2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Subnet-AZ1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Subnet-AZ2
  
  NatGateway1ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
        Domain: vpc

  NatGateway2ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
        Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-NatGateway1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-NatGateway2

############################################################
# Public Routing
############################################################

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Public-Route-Table

  DefaultPublicRoute: # Passes outbound traffic to the InternetGateway
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0 # traffic destination range
      GatewayId: !Ref InternetGateway # send traffic here

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

############################################################
# Private Routing
############################################################

# AZ 1

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Route-Table-AZ1

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0 # traffic destination range
      NatGatewayId: !Ref NatGateway1 # send traffic here

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

# AZ 2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Route-Table-AZ2

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0 # traffic destination range
      NatGatewayId: !Ref NatGateway2 # send traffic here

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:

  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${Environment}-VPC

  AvailabilityZone1:
    Description: A reference to the first Availability Zone
    Value: !Select [0, !GetAZs '']
    Export:
      Name: !Sub ${Environment}-AZ1

  AvailabilityZone2:
    Description: A reference to the second Availability Zone
    Value: !Select [1, !GetAZs '']
    Export:
      Name: !Sub ${Environment}-AZ2

  VPCPublicRouteTable:
    Description: A reference to the public route table for the VPC
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${Environment}-Public-RouteTable

  VPCPrivateRouteTable1:
    Description: A reference to the private route table in AZ1
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub ${Environment}-Private-RouteTable-AZ1

  VPCPrivateRouteTable2:
    Description: A reference to the private route table in AZ2 for the VPC
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub ${Environment}-Private-RouteTable-AZ2

  PublicSubnets:
    Description: A list of references to the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${Environment}-Public-Subnets

  PrivateSubnets:
    Description: A list of references to the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${Environment}-Private-Subnets

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Environment}-Public-Subnet-AZ1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Environment}-Public-Subnet-AZ2

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Environment}-Private-Subnet-AZ1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Environment}-Private-Subnet-AZ2
