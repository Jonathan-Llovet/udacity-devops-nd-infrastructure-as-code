Description: >
  Jonathan Llovet / Udacity DevOps Engineer ND 2020 - Udagram Project
  Definition of server infrastructure

Parameters:
  Owner:
    Description: Email address of resource owner
    Type: String
    Default: jonathan.llovet@gmail.com
    # AllowedPattern: '/[^\s@]+@[^\s@]+\.[^\s@]+/'

  Environment:
    Description: Name of the environment - will be prefixed to resources
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - QA
      - Prod

  WebServerKeyName:
    Description: Name of SSH Key used for web servers
    Type: String

  BastionHostKeyName:
    Description: Name of SSH Key used for web servers
    Type: String
  
  BastionHostsSecurityGroupIngressCIDR:
    Description: CIDR block that is allowed to connect to bastion hosts over ssh. It is recommended you restrict this to your IP address for testing.
    Type: String
    Default: 0.0.0.0/0

Resources:

############################################################
# IAM Role and Policy
############################################################

  UdagramWebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: Udagram-Web-Server
      Path: "/"
      Roles:
        - !Ref AllowS3AccessForUdagramWebAppRole

  AllowS3AccessForUdagramWebAppRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Allow web server EC2 instances to access S3 bucket for Udagram
      Path: "/"
      ManagedPolicyArns:
        - !Ref AllowGetObjectForUdagramS3BucketPolicy
      RoleName: Allow-S3-Access-For-Udagram-Web-App
      Tags:
        - Key: Owner
          Value: !Ref Owner

  AllowGetObjectForUdagramS3BucketPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy to allow access to Udacity Udagram S3 Bucket
      ManagedPolicyName: Allow-Get-Object-For-Udagram-S3-Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::udacity-demo-1/udacity.zip'

############################################################
# EC2 Instances
############################################################

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
      ImageId: ami-085925f297f89fce1
      # KeyName: !Ref WebServerKeyName
      IamInstanceProfile:
        !Ref UdagramWebServerInstanceProfile
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      InstanceType: t3.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub "${Environment}-Private-Subnets"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP Traffic to Web Server
      VpcId:
        Fn::ImportValue:
          !Sub "${Environment}-VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.0.0/16
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/16
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  BastionHostsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId:
        Fn::ImportValue:
          !Sub "${Environment}-VPC"
      SecurityGroupIngress:
      - CidrIp: !Ref BastionHostsSecurityGroupIngressCIDR
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
  
  BastionHostAZ1:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::ImportValue:
          !Sub ${Environment}-AZ1
      SubnetId:
        Fn::ImportValue:
          !Sub ${Environment}-Public-Subnet-AZ1
      ImageId: ami-0323c3dd2da7fb37d
      InstanceType: t2.micro
      KeyName: !Ref BastionHostKeyName
      SecurityGroupIds:
        - !Ref BastionHostsSecurityGroup
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-Bastion-Host-AZ1"
  
  BastionHostAZ2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::ImportValue:
          !Sub ${Environment}-AZ2
      SubnetId:
        Fn::ImportValue:
          !Sub ${Environment}-Public-Subnet-AZ2
      ImageId: ami-0323c3dd2da7fb37d
      InstanceType: t2.micro
      KeyName: !Ref BastionHostKeyName
      SecurityGroupIds:
        - !Ref BastionHostsSecurityGroup
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-Bastion-Host-AZ2"

############################################################
# Load Balancer
############################################################

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP Traffic to Load Balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${Environment}-VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub ${Environment}-Public-Subnet-AZ1
      - Fn::ImportValue: !Sub ${Environment}-Public-Subnet-AZ2
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTargetGroup'
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'LoadBalancerListener'
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 45
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: Udagram-Web-App-Autoscaling-Target-Group
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub "${Environment}-VPC"

Outputs:
  AllowS3AccessForUdagramWebAppRole:
    Description: A reference to the IAM Role to allow Udagram apps access to specified S3 bucket
    Value: !Ref AllowS3AccessForUdagramWebAppRole
    Export:
      Name: Allow-S3-Access-For-Udagram-Web-App-Role

  AllowGetObjectForUdagramS3BucketPolicy:
    Description: A reference to the IAM ManagedPolicy to allow Udagram apps access to specified S3 bucket
    Value: !Ref AllowGetObjectForUdagramS3BucketPolicy
    Export:
      Name: Allow-Get-Object-For-Udagram-S3-Bucket-Policy

  WebAppLaunchConfig:
    Description: A reference to the WebAppLaunchConfig for Udagram
    Value: !Ref WebAppLaunchConfig
    Export:
      Name: Udagram-Web-App-Launch-Config

  WebAppGroup:
    Description: A reference to the WebAppGroup for Udagram
    Value: !Ref WebAppGroup
    Export:
      Name: Udagram-Web-App-Group

  WebServerSecurityGroup:
    Description: A reference to the WebServerSecurityGroup for Udagram
    Value: !Ref WebServerSecurityGroup
    Export:
      Name: WebServerSecurityGroup

  BastionHostsSecurityGroup:
    Description: A reference to BastionHostsSecurityGroup
    Value: !Ref BastionHostsSecurityGroup
    Export:
      Name: BastionHostsSecurityGroup

  BastionHostAZ1:
    Description: A reference to the Bastion Host in AZ1
    Value: !Ref BastionHostAZ1
    Export:
      Name: BastionHostAZ1

  BastionHostAZ2:
    Description: A reference to Bastion Host in AZ2
    Value: !Ref BastionHostAZ2
    Export:
      Name: BastionHostAZ2

  LoadBalancerSecurityGroup:
    Description: A reference to the LoadBalancerSecurityGroup for Udagram
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: Udagram-Load-Balancer-Security-Group

  WebAppLoadBalancer:
    Description: A reference to the WebAppLoadBalancer for Udagram
    Value: !Ref WebAppLoadBalancer
    Export:
      Name: Udagram-Web-App-Load-Balancer

  WebAppLoadBalancerDNSName:
    Description: The DNS name of the WebAppLoadBalancer for Udagram
    Value: !Sub 
      - "http://${LoadBalancerDNS}"
      - {LoadBalancerDNS: !GetAtt WebAppLoadBalancer.DNSName}
    Export:
      Name: Web-App-Load-Balancer-DNS-Name

  LoadBalancerListener:
    Description: A reference to the LoadBalancerListener for Udagram
    Value: !Ref LoadBalancerListener
    Export:
      Name: Udagram-Load-Balancer-Listener

  LoadBalancerListenerRule:
    Description: A reference to the LoadBalancerListenerRule for Udagram
    Value: !Ref LoadBalancerListenerRule
    Export:
      Name: Udagram-Load-Balancer-Listener-Rule

  WebAppTargetGroup:
    Description: A reference to the WebAppTargetGroup for Udagram
    Value: !Ref WebAppTargetGroup
    Export:
      Name: Udagram-Web-App-Target-Group
