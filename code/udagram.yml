Description: >
    Jonathan Llovet / Udacity DevOps Engineer ND 2020 - Udagram Project

Parameters:
  Owner:
    Description: Email address of resource owner
    Type: String
    Default: jonathan.llovet@gmail.com
    AllowedPattern: '/[^\s@]+@[^\s@]+\.[^\s@]+/'

  Environment:
    Description: Name of the environment - will be prefixed to resources
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - QA
      - Prod

  VpcCIDR:
    Description: CIDR Block for the VPC (e.g 10.0.0.0/16)
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PublicSubnet1CIDR:
    Description: CIDR block of public subnet in first availability zone
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PublicSubnet2CIDR:
    Description: CIDR block of public subnet in second availability zone
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet1CIDR:
    Description: CIDR block of private subnet in first availability zone
    Type: String
    Default: 10.0.2.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PrivateSubnet2CIDR:
    Description: CIDR block of private subnet in second availability zone
    Type: String
    Default: 10.0.3.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

Resources:

############################################################
# Network Infrastructure
############################################################

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-VPC"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub "${Environment}-InternetGateway"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

############################################################
# Subnets
############################################################

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Public-Subnet-(AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Public-Subnet-(AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Subnet-(AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-Private-Subnet-(AZ2)
  
  NatGateway1ElasticIP:
    Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc

  NatGateway2ElasticIP:
    Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-NatGateway1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Name
          Value: !Sub ${Environment}-NatGateway2

############################################################
# Public Routing
############################################################

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Owner
            Value: !Ref Owner
          - Key: Name
            Value: !Sub ${Environment}-Public-Route-Table

  DefaultPublicRoute: # Passes outbound traffic to the InternetGateway
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0 # traffic destination range
      GatewayId: !Ref InternetGateway # send traffic here

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

############################################################
# Private Routing
############################################################

# AZ 1

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Owner
            Value: !Ref Owner
          - Key: Name
            Value: !Sub ${Environment}-Private-Route-Table-(AZ1)
# DefaultPrivateRoute1
# PrivateSubnet1RouteTableAssociation

# AZ 2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC
        Tags:
          - Key: Owner
            Value: !Ref Owner
          - Key: Name
            Value: !Sub ${Environment}-Private-Route-Table-(AZ2)
# DefaultPrivateRoute2
# PrivateSubnet2RouteTableAssociation

############################################################
# EC2 Instances
############################################################

  AllowS3AccessForUdagramWebApp:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Allow web server EC2 instances to access S3 bucket for Udagram
      Path: "/"
      ManagedPolicyArns:
        - !Ref AllowGetObjectForUdagramS3Bucket
      RoleName: Allow-S3-Access-For-Udagram-Web-App
      Tags:
        - Key: Owner
          Value: !Ref Owner

  AllowGetObjectForUdagramS3Bucket:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy to allow access to Udacity Udagram S3 Bucket
      ManagedPolicyName: Allow-Get-Object-For-Udagram-S3-Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::udacity-demo-1/udacity.zip'

    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              apt-get update -y
              apt-get install unzip awscli -y
              apt-get install apache2 -y
              systemctl start apache2.service
              cd /var/www/html
              aws s3 cp s3://udacity-demo-1/udacity.zip .
              unzip -o udacity.zip
          ImageId: ami-085925f297f89fce1
          KeyName: udagram-server
          SecurityGroups:
          - Ref: WebServerSecGroup
          InstanceType: t3.medium
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
Outputs: